; this node (1) receives and send a pinglist and address information
; and (2) collect and process the results from nodes
; Note that the controller info host cannot be updated online for now.
[controller]
; host address of controller
host = 10.200.200.3
; webserver for plots, fetch a pinglist.yaml (/pinglist) and RDMA addresses (/address_store)
control_port = 20118
; result collection port using http
collect_port_http = 24704
; result collection port using zmq
collect_port_zmq = 24705

; parameters used by client for communication with controller
; Note that parameters is not updated online, it must be pre-defined
[param]
; speed that server reads config/pinglist.yaml (default: 10 seconds)
interval_read_pinglist_sec = 10

; speed that clients sync with server (default: 10 seconds)
; Note that this parameter value must be large for a large number of clients
; to avoid tcp socket's TIME_WAIT. 
; For example, 1 client + 10 sec -> 10s of concurrent TIME_WAIT
interval_sync_pinglist_sec = 10

; speed that clients report to controller (default: 10 * 1000 milliseconds)
interval_report_ping_result_millisec = 10000

; speed that each client send a ping packet (default: 1 * 1000000 microseconds)
interval_send_ping_ib_microsec = 100000
interval_send_ping_roce_microsec = 100000
interval_send_ping_tcp_microsec = 100000
interval_send_ping_udp_microsec = 100000

; traffic class (DHCP value) of IB (default: 0) and RoCEv2 (default: 106)
traffic_class_ib = 0
traffic_class_roce = 106

; protocol to send ping result: zmq (~10ms), http (~10s). 
; Note that http is a default protocol for the control plane. 
; For the low latency report, ZeroMQ can be used in reporting ping results.
protocol_to_report_result = zmq

; polling interval of cqe/sock events. 
; 0 = event-driven mode which is blocking mode.
; Note that the blocking mode yields a high latency in event polling.
interval_poll_event_udp_microsec = 0
; interval_poll_event_rdma_microsec = 0


; logging configs {TRACE, DEBUG, INFO, WARN, ERROR, CRITICAL}
[logging]
; RDMA (IB & RoCE)
logger_cpp_process_rdma_server = info
logger_cpp_process_rdma_client = info
logger_cpp_process_rdma_result = info
logger_cpp_process_rdma_ping_table = info
; UDP
logger_cpp_process_udp_server = info
logger_cpp_process_udp_client = info
logger_cpp_process_udp_result = info
logger_cpp_process_udp_ping_table = info
; TCP
logger_cpp_process_tcp_server = info
logger_cpp_process_tcp_client = info
logger_cpp_process_tcp_result = info
logger_cpp_process_tcp_ping_table = info
; Common
logger_ipc_process_producer = info
logger_ipc_process_consumer = info